#!/bin/bash
#equaliser
#0 31.25 Hz
#1 62.50 Hz
#2 125.00 Hz
#3 250.00 Hz
#4 500.00 Hz
#5 1.00 kHz
#6 2.00 kHz
#7 4.00 kHz
#8 8.00 kHz
#9 16.00 kHz
#which youtube-dl
#lokasi /usr/local/lib/python2.7
#ytsrc update
#ytsrc="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp"
#atau
#ytsrc="https://github.com/ytdl-org/youtube-dl/releases/latest/download/youtube-dl"
#ytsrc="https://yt-dl.org/downloads/latest/youtube-dl"
#ytsrc="https://github.com/dirkf/youtube-dl/releases/latest/download/youtube-dl"

# curl -O https://bootstrap.pypa.io/pip/3.5/get-pip.py
# python get-pip.py
# pip install --upgrade pip

#manual repo
#pip install git+https://github.com/ytdl-org/youtube-dl.git@master#egg=youtube_dl

#echo "Nanti ketik Y terus" && pkg update -y && pkg install wget -y && wget https://raw.githubusercontent.com/s1sw4nto/lagu/main/vlcauto -O vlcauto && chmod a+rx vlcauto && ./vlcauto install
URLUPDATE="https://raw.githubusercontent.com/s1sw4nto/lagu/main/vlcauto"
YOUTUBE_DL="/usr/local/bin/youtube-dl"
mindur="210"
dur="18000"

update(){
        ping -c 2 -s 50 google.com
        if [ "$?" != "0" ];then
		           echo "-------------------"
                echo "Ping failed"
        else
               TEST=`curl -s https://pastebin.com/raw/3rG2AB1C | grep "URL" | awk -F '"' 'NR == 1 {print $4}'`
               echo "$TEST" > radio1.txt
               echo "-------------------"
               echo "$TEST"
               echo "-------------------"
               wget $URLUPDATE -O $PREFIX/bin/vlcauto
               clear
               echo "-------------------"
               echo "Update selesai"
               echo "-------------------"
               echo "Ketik: vlcauto"
               echo "-------------------"
	      fi
}
station(){
        ping -c 2 -s 50 google.com
        if [ "$?" != "0" ];then
		           echo "-------------------"
                echo "Ping failed"
        else
               #single quote double quote
               TEST=`curl -s "$URL" | grep \"$GREP\" | awk -F '"' 'NR == 1 {print $4}'`
               echo "$TEST" > radio1.txt
               echo "-------------------"
               echo "$TEST"
               echo "-------------------"
	      fi
}

cmd(){
        echo "--------------------"
        echo "Run loop cmd"
        echo "--------------------"
        while true
         do
                            URL=`cat radio1.txt`
                            for next in $URL
                            do
                            echo "$next"
                            echo "--------------------"
                            #youtube-dl --skip-download --print-json https://youtu.be/11JI_2dQZqU | jq "{"date": .upload_date,"title": .title,"URL": .webpage_url,"duration": .duration}"
                            #youtube-dl --skip-download --print-json https://youtu.be/11JI_2dQZqU | jq keys
                            ytm=$(echo "$next" | grep -n "youtu" | awk -F "//" '{print $2}' | awk -F "." 'NR == 1{print $1}')
						    ytweb=$(echo "$next" | grep -n "youtu" | awk -F "//" '{print $2}' | awk -F "." 'NR == 1{print $2}')
						    ytgoogle=$(echo "$next" | grep -n "googlevideo" | awk -F "//" '{print $2}' | awk -F "." 'NR == 1{print $2}')
                            if [[ $ytm == "youtu" ]] || [[ $ytweb == "youtube" ]] ; then
                                echo "continue" > loop.txt
                                #$YOUTUBE_DL --no-check-certificate -f "bestaudio[asr=48000]/bestaudio" --ignore-errors --get-title --get-url "$next" > youtubejson.txt
                                ytdl=$($YOUTUBE_DL --skip-download --print-json "$next")
                                echo "$ytdl" | jq -r ".duration,.title" > youtubejson.txt
                                #echo "$ytdl" | jq -r ".formats" | jq -r '.[] | select(.asr == 48000) |  select(.format_id == "251") | .url' >> youtubejson.txt
                                echo "$ytdl" | jq -r ".formats" | jq -r '.[] | select(.format_id == "251") | .url' >> youtubejson.txt
                                durasi=$(cat youtubejson.txt | awk -F " " 'NR == 1{print}')
                                title=$(cat youtubejson.txt | awk -F " " 'NR == 2{print}' | iconv -f utf-8 -t ascii//translit | sed -E 's/[^[:alnum:][:blank:]]+/-/g' | sed 's/ *$//g' | sed 's/ -*$//g' | sed 's/-*$//g' | sed 's/_*$//g' | cut -c1-200)
                                url=$(cat youtubejson.txt | awk -F " " 'NR == 3{print}')
                                #judul2 > /dev/null 2>&1 &
                                echo "Durasi: $durasi" > title.txt
                                echo "Title: $title" >> title.txt
                                echo "Title: $url"
                                echo "--------------------"
                                echo "Title: $title"
                                echo "--------------------"
                                echo "Link youtube"
                                echo "--------------------"
                                 if (( $durasi >= $mindur && $durasi <= $dur )); then
                                    echo "Durasi: $durasi ok"
                                    echo "--------------------"
                                else
                                   echo "Durasi: $durasi tidak sesuai"
                                   echo "-----------------"
                                   continue
                                fi
                                equ="-af equalizer=0:7:0:0:0:0:0:0:0:5"
                            else
                                if [[ $ytgoogle == "googlevideo" ]]; then
                                    equ="-af equalizer=0:7:0:0:0:0:0:0:0:5"
                                else
                                    equ="-af equalizer=0:3:0:0:0:0:0:0:0:3"
                                fi
                                url="$next"
                                echo "Link bukan youtube"
                            fi
                            
                            mplayer $url -srate 48000 -af lavcresample=48000 $equ -novideo -msglevel all=4
                            PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                            if [ "$PID" ]; then
                                 echo "--------------------"
                                 echo "Mplayer Running: $PID"
                                 echo "--------------------"
                            else
                                 echo "--------------------"
                                 echo "Mplayer Not Running"
                                 echo "--------------------"
                                 loop=$(cat loop.txt)
                                 $loop
                                 echo "$loop"
                                 echo "--------------------"
                            fi
                            done
         done
         
}
start(){
        PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "--------------------"
                            echo "break" > loop.txt
                            echo "Mplayer Running: $PID"
                            kill $PID
                            echo "--------------------"
                        else
                            echo "--------------------"
                            echo "Mplayer Not Running"
                            cmd
                        fi
}
stop(){
        PID=`ps aux | grep -w 'vlcauto' |grep -v grep |awk -F" " '{print $2}'`
        PID2=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " '{print $2}'`
                        if [ "$PID2" ]; then
                            for next in $PID2; do
                                   echo "$next"
                                   kill $next
                                   #kill $PID2
                            done
                        else
                            echo "--------------------"
                            echo "Mplayer Not Running"
                            echo "--------------------"
                        fi
                        if [ "$PID" ]; then
                            for next2 in $PID; do
                                   echo "$next2"
                                   kill $next2
                                   #kill $PID
                            done
                        else
                            echo "--------------------"
                            echo "VLC Auto Not Running"
                            echo "--------------------"
                        fi
}
status(){
        echo "--------------------"
        cat radio1.txt
        echo "--------------------"
        PID=`ps aux | grep -nw "vlcauto" | grep -v grep | awk -F" " ' {print $11 " " $12 " " $13 " " $14 " " $15}'`
        PID2=`ps aux | grep -nw "mplayer" | grep -v grep |awk -F" " ' {print $11 " " $12 " " $13 " " $14 " " $15}'`
                        if [ "$PID" ]; then
                            echo "VLC Bash Running:"
                            echo "--------------------"
                            echo "$PID"
                            echo "--------------------"
                        else
                            echo "--------------------"
                            echo "VLC Bash Not Running"
                            echo "--------------------"
                        fi
                        if [ "$PID2" ]; then
                            echo "Mplayer Running:"
                            echo "--------------------"
                            echo "$PID2"
                            echo "--------------------"
                        else
                            echo "--------------------"
                            echo "Mplayer Not Running:"
                            echo "--------------------"
                        fi
                        cat title.txt
                        echo "--------------------"
}
sortdur(){
                            echo "Short durasi"
                            URL=`cat radio1.txt`
                            echo " " > radio2.txt
                            echo " " > title.txt
                            for next in $URL
                            do
                                check=$($YOUTUBE_DL --skip-download --dump-json $next)
                                title=$(echo "$check" | jq -r "(.title)" | iconv -f utf-8 -t ascii//translit | sed -E 's/[^[:alnum:][:blank:]]+/-/g' | sed 's/ *$//g' | sed 's/ -*$//g' | sed 's/-*$//g' | sed 's/_*$//g' | cut -c1-200)
                                durasi=$(echo "$check" | jq -r "(.duration)")
                                if (( $durasi >= $mindur && $durasi <= $dur )); then
                                    echo "Title: $title"
                                    echo "Title: $title" >> title.txt
                                    echo "Durasi: $durasi"
                                    echo "$next" >> radio2.txt
                                    echo "Link: $next"
                                    echo "--------------------"
                                    #url=$($YOUTUBE_DL --no-check-certificate -f "bestaudio[asr=48000]/bestaudio" -i -g "$next")
                                else
                                   echo "Title: $title"
                                   echo "Durasi: $durasi"
                                   echo "Durasi kurang lama"
                                   echo "-----------------"
                                   #continue
                                fi
                                done
                                title=$(awk '{if(NF>0) {print $0}}' title.txt)
                                echo "$title" > title.txt
                                del=$(awk '{if(NF>0) {print $0}}' radio2.txt)
                                echo "$del" > radio1.txt
                                echo " " > radio2.txt
                                echo "Final link"
                                echo "--------------------"
                                cat radio1.txt
                                echo "--------------------"
                                wc -l radio1.txt
                                echo "-----------------"
}
judul(){
                            echo "Title Vidio"
                            URL=`cat radio1.txt`
                            echo " " > title.txt
                            for next in $URL
                            do
                                check=$($YOUTUBE_DL --skip-download --dump-json $next)
                                title=$(echo "$check" | jq -r "(.title)" | iconv -f utf-8 -t ascii//translit | sed -E 's/[^[:alnum:][:blank:]]+/-/g' | sed 's/ *$//g' | sed 's/ -*$//g' | sed 's/-*$//g' | sed 's/_*$//g' | cut -c1-200)
                                echo "Title: $title"
                                echo "Title: $title" >> title.txt
                             done
                             del=$(awk '{if(NF>0) {print $0}}' title.txt)
                             echo "$del" > title.txt
}
judul2(){
                            check=$($YOUTUBE_DL --skip-download --dump-json $next)
                            title=$(echo "$check" | jq -r "(.title)" | iconv -f utf-8 -t ascii//translit | sed -E 's/[^[:alnum:][:blank:]]+/-/g' | sed 's/ *$//g' | sed 's/ -*$//g' | sed 's/-*$//g' | sed 's/_*$//g' | cut -c1-200)
                            echo "Title: $title"
                            echo "Title: $title" > title.txt
}
next(){
                   PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "--------------------"
                            echo "continue" > loop.txt
                            echo "Mplayer Running: $PID"
                            kill $PID
                            echo "--------------------"
                        else
                            echo "--------------------"
                            echo "Mplayer Not Running"
                            cmd
                        fi
}
boot(){
for (( i=20; i>0; i--)); do sleep 1 ;  done
       killall vlc
       while true
       do
        ping -c 2 -s 50 google.com
        if [ "$?" != "0" ];then
		           echo "-------------------"
               echo "Ping failed"
               sleep 3
               #break
        else
              #TEST=`curl -s https://pastebin.com/raw/3rG2AB1C | grep "URL" | awk -F '"' 'NR == 1 {print $4}'`
              #echo "$TEST" > radio1.txt
              #echo "$TEST"
              cmd
              exit
	      fi
        done
}
case $1 in
"update")
        update
		PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "Mplayer Running: $PID"
                            #stop > /dev/null 2>&1 &
                            start > /dev/null 2>&1 &
                        else
                            echo "Mplayer Not Running"
                            start > /dev/null 2>&1 &
                        fi
;;
"stop")
        stop
;;
"start")
        start > /dev/null 2>&1 &
        #start
;;
"restart")
        stop > /dev/null 2>&1 &
        start > /dev/null 2>&1 &
;;
"status")
        status
;;
"next")
        next
;;
"url")
      echo "--------------------"
      cat radio1.txt
      echo "--------------------"
      read -p "Multi url ? y/n: " yn
      echo "Enter URL"
      echo "--------------------"
      case $yn in
                            [Yy]* ) read url
                                        echo $url > radio1.txt
                                        while true
                                        do
                                        read url
                                        echo $url >> radio1.txt
                                        sleep 2
                                        done
                                        ;;
                            [Nn]* ) read url
                                        echo $url > radio1.txt
                                        ;;
                            * ) echo "Please answer yes or no.";;
      esac
      echo "--------------------"
      cat radio1.txt
      PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "Mplayer Running: $PID"
                            #stop > /dev/null 2>&1 &
                            start > /dev/null 2>&1 &
                        else
                            echo "Mplayer Not Running"
                            start > /dev/null 2>&1 &
                        fi
       echo "--------------------"
;;
"yt")
      echo "--------------------"
      cat radio1.txt
      echo "--------------------"
      echo "Enter Youtube URL"
      echo "--------------------"
      read url
      echo $url > radio1.txt
      echo "--------------------"
      cat radio1.txt
      echo "--------------------"
      $YOUTUBE_DL --no-check-certificate -f "bestaudio[asr=48000]/bestaudio" --ignore-errors --get-title --get-url "$url" > youtubejson.txt
                                title=$(cat youtubejson.txt | awk -F " " 'NR == 1{print}' | iconv -f utf-8 -t ascii//translit | sed -E 's/[^[:alnum:][:blank:]]+/-/g' | sed 's/ *$//g' | sed 's/ -*$//g' | sed 's/-*$//g' | sed 's/_*$//g' | cut -c1-200)
                                url=$(cat youtubejson.txt | awk -F " " 'NR == 2{print}')
                                echo "Title: $title" > title.txt
                                echo "$url" > radio1.txt
                                echo "Title: $url"
                                echo "--------------------"
                                echo "Title: $title"
                                echo "--------------------"
      PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "Mplayer Running: $PID"
                            #stop > /dev/null 2>&1 &
                            start > /dev/null 2>&1 &
                        else
                            echo "CMD VLC Start"
                            start > /dev/null 2>&1 &
                        fi
       echo "--------------------"
;;
"ytpl")
      echo "--------------------"
      cat radio1.txt
      echo "--------------------"
      echo "Enter Youtube URL"
      echo "--------------------"
      read url
      echo "-----------------"
      echo "Start Index"
      echo "-----------------"
      read start
      echo "End Index"
      echo "-----------------"
      read end
	  echo "-----------------"
	  read -p "Want sort duration ? y/n: " yn
	  echo "-----------------"
      case $yn in
                            [Yy]* ) sortdurasi="y"
                                        echo "Sort durasi"
                            ;;
                            [Nn]* ) echo "Tanpa sort duration"
                                        sortdurasi="n"
                            ;;
                            * ) echo "Please answer yes or no."
                                  exit
                            ;;
        esac 
        echo "-----------------"
        read -p "Play from New Video ? y/n: " yn
        echo "-----------------"
        case $yn in
                            [Yy]* ) echo "Play from New Video"
                                        newvid="y"
                                         ;; 
                            [Nn]* ) echo "Play from Last Video"
							             newvid="n"
							             ;;
                            * ) echo "Please answer yes or no."
                                  exit;;
        esac
        check=$($YOUTUBE_DL --skip-download --dump-json $url)
        #title=$(echo "$check" | jq -r "(.title)")
        title=$(echo "$check" | jq -r "(.title)" | iconv -f utf-8 -t ascii//translit | sed -E 's/[^[:alnum:][:blank:]]+/-/g' | sed 's/ *$//g' | sed 's/ -*$//g' | sed 's/-*$//g' | sed 's/_*$//g' | cut -c1-200)
        echo "-----------------"
        echo "Title: $title"
        cn=$(echo "$check" | jq -r "(.channel)")
        echo "-----------------"
        echo "Channel: $cn"
        chid=$(echo "$check" | jq -r "(.channel_id)")
        plid=$(echo "$chid" | sed 's/UC/UU/')
        echo "-----------------"
        echo "Channel ID: $chid"
        echo "Playlist ID: $plid"
        echo "-----------------"
      ch=$(echo "https://www.youtube.com/channel/$chid")
      echo "Channel URL: $ch"
      echo "-----------------"
      pl=$(echo "$ch" | sed 's/channel\/UC/playlist\?list=UU/')
      echo "Playlist: $pl&playnext=1&index=1"
      echo "-----------------"
      url="$pl&playnext=1&index=1"
      $YOUTUBE_DL --ignore-errors --flat-playlist --dump-json "$url" --playlist-start $start --playlist-end $end  --match-filter "duration > $mindur" --match-filter "duration < $dur" | jq -r '.id' | sed 's_^_https://youtu.be/_' > radio1.txt
      cat radio1.txt
      echo "--------------------"
      if [[ $newvid == "y"* ]]; then
          echo "Play from New Video"
          echo "--------------------"
          cat radio1.txt
      else
           echo "Play from Last Video"
           echo "--------------------"
	       nl radio1.txt | sort -nr | cut -f 2- > radio2.txt
		   cat radio2.txt > radio1.txt
		   cat radio1.txt
		   echo " " > radio2.txt
      fi
      echo "--------------------"
      wc -l radio1.txt
      echo "-----------------"
      if [[ $sortdurasi == "y"* ]]; then
          sortdur
      else
          echo "Tanpa sort durasi"
      fi
      PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "Mplayer Running: $PID"
                            #stop > /dev/null 2>&1 &
                            start > /dev/null 2>&1 &
                        else
                            echo "Mplayer Not Running"
                            #stop > /dev/null 2>&1 &
                            start > /dev/null 2>&1 &
                        fi
        echo "--------------------"
;;
"radio")
       echo "-------------------"
       echo "Pilih Radio Station:"
       echo "-------------------"
       PS3='Choose: '
foods=("Imzers" "Wijaya" "Suara giri" "Perkasa" "Dakwatul" "Music Channel" "BOSS FM" "Madu FM")
       select fav in "${foods[@]}"; do
       case $fav in
       "Imzers")
           URL="https://pastebin.com/raw/3rG2AB1C"
           GREP="URL"
           station
        ;;
        "Wijaya")
           URL="https://pastebin.com/raw/pRtByuPG"
           GREP="URL"
           station
        ;;
        "Perkasa")
           URL="https://pastebin.com/raw/u3uf6NLB"
           GREP="URL"
           station
        ;;
        "Dakwatul")
           URL="https://pastebin.com/raw/hrCa0kKJ"
           GREP="URL"
           station
        ;;
        "Music Channel")
           URL="https://pastebin.com/raw/A52gWgta"
           GREP="URL"
           station
        ;;
        "BOSS FM")
           URL="https://pastebin.com/raw/UWZCsmgD"
           GREP="URL"
           station
        ;;
        "Madu FM")
           URL="https://pastebin.com/raw/icMt6kih"
           GREP="RADIO"
           station
        ;;
        "Suara giri")
           URL="https://pastebin.com/raw/pRtByuPG"
           GREP="SuaraGiri"
           station
        ;;
        esac
        PID=`ps aux | grep -w 'mplayer' |grep -v grep |awk -F" " ' {print $2}'`
                        if [ "$PID" ]; then
                            echo "Mplayer Running: $PID"
                            #stop > /dev/null 2>&1 &
                            start > /dev/null 2>&1 &
                        else
                            echo "Mplayer Not Running"
                            start > /dev/null 2>&1 &
                        fi
        exit
        done
;;
"boot")
        boot > /dev/null 2>&1 &
;;
"install")
   ping -c 4 -s 560 1.1.1.1
   if [ "$?" != "0" ];then
		     echo "-------------------"
             echo "Ping failed"
             echo "Check Internet kamu"
   else
          pkg install mplayer -y
          cp vlcauto $PREFIX/bin/vlcauto
          chmod a+rx $PREFIX/bin/vlcauto
          rm vlcauto
          rm wget-log
          rm wget-log.*
          pkg clean -y
          pkg autoclean - y
          clear
          pkg update -y
          clear
          cd $PREFIX/etc/apt
          ls
          echo "-------------------"
          cat sources.list
          echo "-------------------"
          cat sources.list.dpkg-old
          echo "-------------------"
          cd $PREFIX/etc/apt/sources.list.d
          ls
          echo "-------------------"
          echo "Instalasi selesai"
          echo "-------------------"
          echo "Ketik: vlcauto"
          echo "-------------------"
          exit
	 fi
;;
*)
  echo "command: start | stop | restart | update | status | url | radio | yt | ytpl | next | boot"
;;
esac
